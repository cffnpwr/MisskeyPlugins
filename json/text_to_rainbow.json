{
  "type": "plugin",
  "data": "/// @ 0.16.0\n### {\n  id: \"73f6e561-afbb-4ddd-a9ce-bee9964844a8\"\n  name: \"入力されている文字をレインボーにするプラグイン\"\n  version: \"1.0.0\"\n  author: \"elysion\"\n  description: \"レインボー変換ボタンを投稿メニューに追加します。\"\n  config: {\n    hex: {\n      type: \"string\"\n      label: \"開始する色(000000〜ffffff)\"\n      description: \"既定値：#ff0000(他：#f00 f00等)\"\n      default: \"#ff0000\"\n    }\n  }\n}\n\nlet color = {\n  r: 255\n  g: 0\n  b: 0\n  max: \"\"\n}\n\nvar MAX = 0\nvar MIN = 0\n\n@check_range(name value, value_default) {\n  if !(value >= 0 && value <= 255) {\n    Mk:dialog(\"warning\", `{name}値が0〜255内にありません。{Str:lf}{name}値：{value}{Str:lf}既定値『$[fg.color=ff0000 **{value_default}**]』を使用します。`, \"warning\")\n    value = value_default\n  }\n  return value\n}\n\n@hex2rgb(hex) {\n  if (hex.slice(0, 1) == \"#\") {\n    hex = hex.slice(1, hex.len)\n  }\n  if (hex.len == 3) {\n    hex = [\n      hex.slice(0, 1) hex.slice(0, 1)\n      hex.slice(1, 2) hex.slice(1, 2)\n      hex.slice(2, 3) hex.slice(2, 3)\n    ].join()\n  }\n  if (hex.len != 6) {\n    Mk:dialog(\"warning\", `値が異常です。{Str:lf}値：{hex}{Str:lf}既定値『$[fg.color=ff0000 **ff0000**]』を使用します。`, \"warning\")\n    hex = \"ff0000\"\n  }\n  \n  var value = 0\n  value = Num:from_hex(hex.slice(0, 2))\n  color.r = check_range(\"R\", value, 255)\n  MAX = color.r\n  MIN = color.r\n  color.max = \"R\"\n  \n  value = Num:from_hex(hex.slice(2, 4))\n  color.g = check_range(\"G\", value, 0)\n  if (MAX < color.g) {\n    MAX = color.g\n    color.max = \"G\"\n  }\n  if (MIN > color.g) {\n    MIN = color.g\n  }\n  \n  value = Num:from_hex(hex.slice(4, 6))\n  color.b = check_range(\"B\", value, 0)\n  if (MAX < color.b) {\n    MAX = color.b\n    color.max = \"B\"\n  }\n  if (MIN > color.b) {\n    MIN = color.b\n  }\n}\n\nhex2rgb(Plugin:config.hex)\n\nlet HUE = eval {\n  var h = 0\n  if ((color.r == color.g) && (color.r == color.b)) {\n    h = 0\n  } else {\n    if (color.max == \"R\") {\n      h = 60 * (color.g - color.b) / (MAX - MIN)\n    } elif (color.max == \"G\") {\n      h = 60 * (color.b - color.r) / (MAX - MIN) + 120\n    } elif (color.max == \"B\") {\n      h = 60 * (color.r - color.g) / (MAX - MIN) + 240\n    } else {\n      h = 0\n    }\n  }\n  if (h < 0) {\n    h = h + 360\n  }\n  Math:floor(h)\n}\n\nPlugin:register_post_form_action(\"変換：レインボー文字\", @(form, update) {\n  var input = form.text\n  var array = input.split()\n  var unlf_len = array.len - input.split(Str:lf).len\n  var output = \"\"\n  var color_angle = 360 / unlf_len\n  \n  var cnt = 0\n  for let i array.len {\n    var char = array[i]\n    if (array[i] != Str:lf) {\n      var h = Math:round(Math:abs(\n        color_angle * cnt + HUE\n      ))\n      if (h > 360) {\n        h = (h - 360)\n      }\n      \n      var char_r = 0\n      var char_g = 0\n      var char_b = 0\n      \n      if (h < 60) {\n        char_r = MAX\n        char_g = (h / 60) * (MAX - MIN) + MIN\n        char_b = MIN\n      } elif (h < 120) {\n        char_r = ((120 - h) / 60) * (MAX - MIN) + MIN\n        char_g = MAX\n        char_b = MIN\n      } elif (h < 180) {\n        char_r = MIN\n        char_g = MAX\n        char_b = ((h - 120) / 60) * (MAX - MIN) + MIN\n      } elif (h < 240) {\n        char_r = MIN\n        char_g = ((240 - h) / 60) * (MAX - MIN) + MIN\n        char_b = MAX\n      } elif (h < 300) {\n        char_r = ((h - 240) / 60) * (MAX - MIN) + MIN\n        char_g = MIN\n        char_b = MAX\n      } else {\n        char_r = MAX\n        char_g = MIN\n        char_b = ((360 - h) / 60) * (MAX - MIN) + MIN\n      }\n      \n      var r_hex = Num:to_hex(Math:round(char_r))\n      var g_hex = Num:to_hex(Math:round(char_g))\n      var b_hex = Num:to_hex(Math:round(char_b))\n      var color = ``\n      \n      if (r_hex.len < 2) {\n        r_hex = `0{r_hex}`\n      }\n      color = `{color}{r_hex}`\n      if (g_hex.len < 2) {\n        g_hex = `0{g_hex}`\n      }\n      color = `{color}{g_hex}`\n      if (b_hex.len < 2) {\n        b_hex = `0{b_hex}`\n      }\n      color = `{color}{b_hex}`\n      output = `{output}$[fg.color={color} {char}]`\n      cnt += 1\n    } else {\n      output = `{output}{char}`\n    }\n  }\n\n  update(\"text\", output)\n})"
}